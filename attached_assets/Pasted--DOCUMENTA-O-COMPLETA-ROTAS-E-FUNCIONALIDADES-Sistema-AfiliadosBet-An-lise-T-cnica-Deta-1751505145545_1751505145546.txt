
# üìã DOCUMENTA√á√ÉO COMPLETA - ROTAS E FUNCIONALIDADES
## Sistema AfiliadosBet - An√°lise T√©cnica Detalhada

---

## üè† P√ÅGINA INICIAL E AUTENTICA√á√ÉO

### 1. **Landing Page** - `/`
**Arquivo:** `client/src/pages/simple-landing.tsx`
**Fun√ß√£o:** P√°gina inicial p√∫blica do sistema
**Funcionalidades:**
- Sistema de abas com informa√ß√µes sobre a plataforma
- Se√ß√£o "Como Funciona" com 3 etapas do processo
- Se√ß√£o "Vantagens" destacando benef√≠cios
- Se√ß√£o "Comiss√µes" explicando modelo de ganhos
- Formul√°rio de contato integrado
- Design responsivo com tema dark/blue
- Call-to-action para cadastro/login

### 2. **Login** - `/login`
**Arquivo:** `client/src/pages/login.tsx`
**Fun√ß√£o:** Autentica√ß√£o de usu√°rios e administradores
**Funcionalidades:**
- Login por email ou CPF
- Valida√ß√£o client-side e server-side
- Redirecionamento autom√°tico baseado na role (admin/affiliate)
- Sistema de sess√µes com cookies seguros
- Tratamento de erros de autentica√ß√£o
- Link para p√°gina de registro

### 3. **Registro** - `/register`
**Arquivo:** `client/src/pages/register.tsx`
**Fun√ß√£o:** Cadastro de novos afiliados
**Funcionalidades:**
- Formul√°rio completo com dados pessoais
- Valida√ß√£o de CPF, email √∫nico, username √∫nico
- Hash de senha com bcrypt
- Cria√ß√£o autom√°tica como role 'affiliate'
- Valida√ß√£o de idade (18+)
- Termos de uso e pol√≠tica de privacidade

---

## üë§ PAINEL DO AFILIADO

### 4. **Dashboard Afiliado** - `/home` ou `/dashboard`
**Arquivo:** `client/src/pages/affiliate-home.tsx`
**Fun√ß√£o:** Painel principal do afiliado com m√©tricas
**Funcionalidades:**
- **Cards de Estat√≠sticas:**
  - Total de cliques registrados
  - Total de registros convertidos
  - Total de dep√≥sitos realizados
  - Comiss√£o total acumulada
  - Taxa de convers√£o calculada
- **Gr√°ficos Interativos:**
  - Linha temporal de cliques (√∫ltimos 7 dias)
  - Performance por casa de apostas
- **Se√ß√£o de Convers√µes Recentes:**
  - Lista das √∫ltimas 10 convers√µes
  - Detalhes: tipo, valor, comiss√£o, data
- **Quick Actions:**
  - Criar novo link de afilia√ß√£o
  - Acessar relat√≥rios detalhados
  - Solicitar saque

### 5. **Casas de Apostas** - `/betting-houses`
**Arquivo:** `client/src/pages/betting-houses.tsx`
**Fun√ß√£o:** Listagem e afilia√ß√£o √†s casas dispon√≠veis
**Funcionalidades:**
- **Lista de Casas Dispon√≠veis:**
  - Card visual para cada casa
  - Logo, nome, descri√ß√£o
  - Tipo de comiss√£o (CPA/RevShare/Hybrid)
  - Valor da comiss√£o
  - Status de afilia√ß√£o do usu√°rio
- **Sistema de Afilia√ß√£o:**
  - Bot√£o "Afiliar-se" para casas n√£o afiliadas
  - Gera√ß√£o autom√°tica de links √∫nicos
  - Valida√ß√£o de afilia√ß√£o √∫nica por casa
- **Filtros e Busca:**
  - Filtrar por tipo de comiss√£o
  - Buscar por nome da casa
  - Ordenar por maior comiss√£o
- **Link Tracking:**
  - Gera√ß√£o de URL com subid (username)
  - Sistema de tracking de cliques

### 6. **Meus Links** - `/my-links`
**Arquivo:** `client/src/pages/my-links.tsx`
**Fun√ß√£o:** Gerenciamento dos links de afilia√ß√£o
**Funcionalidades:**
- **Lista de Links Ativos:**
  - URL completo gerado
  - Casa de apostas associada
  - Data de cria√ß√£o
  - Status (ativo/inativo)
- **Estat√≠sticas por Link:**
  - N√∫mero total de cliques
  - Convers√µes geradas
  - Comiss√£o acumulada
  - Taxa de convers√£o
- **Ferramentas de Link:**
  - Copiar URL para clipboard
  - Gerar QR Code
  - Preview do link
  - Compartilhamento social
- **Performance Analytics:**
  - Gr√°fico de cliques por dia
  - Hor√°rios de maior engajamento
  - Origem do tr√°fego

### 7. **Relat√≥rios** - `/reports`
**Arquivo:** `client/src/pages/affiliate-reports.tsx`
**Fun√ß√£o:** Analytics avan√ßados e relat√≥rios detalhados
**Funcionalidades:**
- **Filtros de Per√≠odo:**
  - √öltimas 24h, 7 dias, 30 dias, 90 dias
  - Per√≠odo customizado (data in√≠cio/fim)
- **M√©tricas Principais:**
  - Cliques √∫nicos e totais
  - Registros e convers√µes
  - Volume de dep√≥sitos
  - Comiss√µes por tipo (CPA/RevShare)
- **Gr√°ficos Avan√ßados:**
  - Linha temporal de performance
  - Distribui√ß√£o por casa de apostas
  - Heatmap de atividade por hora
  - Funil de convers√£o
- **Tabela de Convers√µes:**
  - Lista paginada de todas as convers√µes
  - Filtros por tipo, casa, valor
  - Export para CSV/Excel
- **An√°lise Geogr√°fica:**
  - Convers√µes por regi√£o (se dispon√≠vel)
  - Performance por dispositivo

### 8. **Pagamentos** - `/payments`
**Arquivo:** `client/src/pages/affiliate-payments.tsx`
**Fun√ß√£o:** Hist√≥rico e solicita√ß√£o de pagamentos
**Funcionalidades:**
- **Saldo Dispon√≠vel:**
  - Comiss√£o total acumulada
  - Valor j√° sacado
  - Saldo dispon√≠vel para saque
  - Pr√≥ximo pagamento programado
- **Hist√≥rico de Pagamentos:**
  - Lista de todos os pagamentos
  - Status (pending/completed/failed)
  - M√©todo (PIX/TED/Transfer√™ncia)
  - Datas de solicita√ß√£o e processamento
- **Solicita√ß√£o de Saque:**
  - Formul√°rio de nova solicita√ß√£o
  - Valida√ß√£o de valor m√≠nimo
  - Configura√ß√£o de chave PIX
  - Confirma√ß√£o por email/SMS
- **Configura√ß√µes PIX:**
  - Tipos de chave (CPF/Email/Telefone/Aleat√≥ria)
  - Valida√ß√£o de chaves
  - Hist√≥rico de chaves utilizadas

### 9. **Perfil** - `/profile`
**Arquivo:** `client/src/pages/user-profile.tsx`
**Fun√ß√£o:** Gerenciamento de dados pessoais
**Funcionalidades:**
- **Dados Pessoais:**
  - Nome completo, email, CPF
  - Telefone, data de nascimento
  - Endere√ßo completo
- **Dados Banc√°rios:**
  - Chave PIX principal
  - Banco, ag√™ncia, conta
  - Titularidade da conta
- **Configura√ß√µes de Conta:**
  - Altera√ß√£o de senha
  - Configura√ß√µes de notifica√ß√£o
  - Prefer√™ncias de comunica√ß√£o
- **Documentos:**
  - Upload de documentos de identifica√ß√£o
  - Status de verifica√ß√£o KYC
  - Hist√≥rico de altera√ß√µes

---

## üîê PAINEL ADMINISTRATIVO

### 10. **Dashboard Admin** - `/admin`
**Arquivo:** `client/src/pages/admin-dashboard-simple.tsx`
**Fun√ß√£o:** Painel principal com m√©tricas globais do sistema
**Funcionalidades:**
- **KPIs Principais:**
  - Total de afiliados ativos
  - Total de casas de apostas
  - Volume total de convers√µes
  - Receita total gerada
- **Gr√°ficos Executivos:**
  - Crescimento de afiliados por m√™s
  - Volume de convers√µes por casa
  - Receita mensal recorrente
  - Top 10 afiliados por performance
- **Alertas e Notifica√ß√µes:**
  - Novos cadastros pendentes
  - Pagamentos para aprovar
  - Problemas de integra√ß√£o
  - Metas mensais e status
- **Quick Actions:**
  - Aprovar novos afiliados
  - Configurar nova casa
  - Processar pagamentos
  - Gerar relat√≥rios

### 11. **Gerenciamento de Casas** - `/admin/houses`
**Arquivo:** `client/src/pages/admin-houses.tsx`
**Fun√ß√£o:** CRUD completo de casas de apostas
**Funcionalidades:**
- **Lista de Casas:**
  - Tabela com todas as casas cadastradas
  - Status (ativa/inativa)
  - Tipo de integra√ß√£o (Postback/API)
  - N√∫mero de afiliados conectados
- **Cadastro de Nova Casa:**
  - Informa√ß√µes b√°sicas (nome, logo, descri√ß√£o)
  - URL base e par√¢metros de tracking
  - Configura√ß√£o de comiss√µes (CPA/RevShare)
  - Tokens de seguran√ßa autom√°ticos
- **Configura√ß√µes de Integra√ß√£o:**
  - **Postback:**
    - URLs de postback por evento
    - Par√¢metros personalizados
    - Mapeamento de campos
  - **API:**
    - URL base da API
    - Chaves de autentica√ß√£o
    - M√©todo de auth (Bearer/Basic)
    - Intervalo de sincroniza√ß√£o
- **Postbacks Autom√°ticos:**
  - Gera√ß√£o de URLs √∫nicas
  - Teste de connectivity
  - Logs de requisi√ß√µes
- **Gest√£o de Afiliados por Casa:**
  - Lista de afiliados por casa
  - Performance individual
  - Comiss√µes pagas

### 12. **Gerenciamento de Afiliados** - `/admin/manage`
**Arquivo:** `client/src/pages/admin-manage.tsx`
**Fun√ß√£o:** Administra√ß√£o completa de afiliados
**Funcionalidades:**
- **Lista de Afiliados:**
  - Tabela paginada com todos os afiliados
  - Filtros por status, casa, per√≠odo
  - Busca por nome, email, username
- **Perfil Detalhado:**
  - Dados pessoais completos
  - Hist√≥rico de atividades
  - Performance por casa
  - Comiss√µes acumuladas
- **A√ß√µes Administrativas:**
  - Ativar/desativar afiliados
  - Aprovar novos cadastros
  - Resetar senhas
  - Alterar dados pessoais
- **An√°lise de Performance:**
  - Gr√°ficos individuais de convers√£o
  - Comparativo com m√©dia geral
  - Ranking de performance
  - Alertas de inatividade
- **Gest√£o de Comiss√µes:**
  - Comiss√µes personalizadas por afiliado
  - B√¥nus e penalidades
  - Hist√≥rico de altera√ß√µes

### 13. **Gerador de Postbacks** - `/admin/postback-generator`
**Arquivo:** `client/src/pages/postback-generator-professional.tsx`
**Fun√ß√£o:** Ferramenta para configura√ß√£o de postbacks
**Funcionalidades:**
- **Configura√ß√£o por Casa:**
  - Sele√ß√£o da casa de apostas
  - Eventos dispon√≠veis (click/register/deposit/profit)
  - URLs personalizadas por evento
- **Builder de URL:**
  - Interface visual para constru√ß√£o
  - Par√¢metros dispon√≠veis (subid, customer_id, value)
  - Preview em tempo real
  - Valida√ß√£o de sintaxe
- **Teste de Conectividade:**
  - Envio de postback de teste
  - Verifica√ß√£o de resposta
  - Log de debug detalhado
  - Hist√≥rico de testes
- **Templates Pr√©-configurados:**
  - Modelos para casas populares
  - Configura√ß√µes otimizadas
  - Import/export de configura√ß√µes
- **Documenta√ß√£o Integrada:**
  - Exemplos de implementa√ß√£o
  - C√≥digos de resposta
  - Troubleshooting comum

### 14. **Logs de Postbacks** - `/admin/postback-logs`
**Arquivo:** `client/src/pages/postback-logs.tsx`
**Fun√ß√£o:** Monitoramento de postbacks enviados e recebidos
**Funcionalidades:**
- **Lista de Logs:**
  - Tabela com todos os postbacks processados
  - Filtros por casa, evento, status, data
  - Busca por customer_id ou subid
- **Detalhes do Postback:**
  - Dados completos da requisi√ß√£o
  - Headers enviados/recebidos
  - Payload JSON
  - Status code e resposta
- **An√°lise de Performance:**
  - Taxa de sucesso por casa
  - Tempo de resposta m√©dio
  - Erros mais comuns
  - Volume por per√≠odo
- **Alertas Autom√°ticos:**
  - Taxa de erro alta
  - Postbacks com falha
  - Casas n√£o respondendo
  - Timeout de requisi√ß√µes
- **Reprocessamento:**
  - Reenvio de postbacks com falha
  - Processamento em lote
  - Agendamento de retry

### 15. **Gerenciamento de Pagamentos** - `/admin/payments`
**Arquivo:** `client/src/pages/admin-payments.tsx`
**Fun√ß√£o:** Administra√ß√£o de pagamentos e saques
**Funcionalidades:**
- **Fila de Pagamentos:**
  - Solicita√ß√µes pendentes de aprova√ß√£o
  - Informa√ß√µes do afiliado
  - Valor e m√©todo de pagamento
  - Valida√ß√£o de dados banc√°rios
- **Processamento em Lote:**
  - Sele√ß√£o m√∫ltipla de pagamentos
  - Aprova√ß√£o/rejei√ß√£o em massa
  - Gera√ß√£o de comprovantes
  - Integra√ß√£o com bancos (futuro)
- **Hist√≥rico Completo:**
  - Todos os pagamentos processados
  - Filtros avan√ßados
  - Export para contabilidade
  - Reconcilia√ß√£o banc√°ria
- **An√°lise Financeira:**
  - Fluxo de caixa mensal
  - Comiss√µes pagas por casa
  - Proje√ß√µes de pagamento
  - Relat√≥rios fiscais
- **Configura√ß√µes de Pagamento:**
  - Valores m√≠nimos por m√©todo
  - Taxas e custos operacionais
  - Cronograma de processamento
  - Limites por afiliado

### 16. **Configura√ß√µes do Sistema** - `/admin/settings`
**Arquivo:** `client/src/pages/admin-settings-enhanced.tsx`
**Fun√ß√£o:** Configura√ß√µes globais da plataforma
**Funcionalidades:**
- **Configura√ß√µes Gerais:**
  - Nome da plataforma
  - Logotipos e branding
  - Informa√ß√µes de contato
  - Configura√ß√µes de email
- **Configura√ß√µes de Comiss√£o:**
  - Valores padr√£o por tipo
  - Regras de c√°lculo
  - Prazos de pagamento
  - M√≠nimos para saque
- **Integra√ß√µes:**
  - APIs de terceiros
  - Webhooks globais
  - Notifica√ß√µes autom√°ticas
  - Backup e sincroniza√ß√£o
- **Seguran√ßa:**
  - Configura√ß√µes de sess√£o
  - Rate limiting
  - Logs de auditoria
  - Pol√≠ticas de senha
- **Performance:**
  - Cache e otimiza√ß√£o
  - Monitoramento de recursos
  - Limpeza autom√°tica
  - Configura√ß√µes de banco

### 17. **Gerenciamento de API** - `/admin/api-management`
**Arquivo:** `client/src/pages/admin-api-management.tsx`
**Fun√ß√£o:** Administra√ß√£o de chaves de API e integra√ß√µes
**Funcionalidades:**
- **Chaves de API:**
  - Gera√ß√£o de novas chaves
  - Configura√ß√£o de permiss√µes
  - Rate limiting por chave
  - Logs de uso por chave
- **Documenta√ß√£o Integrada:**
  - Endpoints dispon√≠veis
  - Exemplos de c√≥digo
  - Schema de dados
  - C√≥digos de erro
- **Monitoramento:**
  - Uso por endpoint
  - Performance das APIs
  - Erros e timeouts
  - Estat√≠sticas de uso
- **Webhooks:**
  - Configura√ß√£o de webhooks
  - Retry policies
  - Assinatura de seguran√ßa
  - Logs de entrega

---

## üîÑ ROTAS DE API (Backend)

### 18. **Autentica√ß√£o** - `/api/auth/*`
**Arquivo:** `server/routes.ts`
**Endpoints:**
- `POST /api/auth/login` - Login de usu√°rios
- `POST /api/auth/logout` - Logout e destrui√ß√£o de sess√£o
- `POST /api/auth/register` - Cadastro de novos afiliados
- `GET /api/auth/me` - Informa√ß√µes do usu√°rio autenticado

### 19. **Estat√≠sticas** - `/api/stats/*`
**Arquivo:** `server/routes.ts`
**Endpoints:**
- `GET /api/stats/admin` - Estat√≠sticas administrativas globais
- `GET /api/stats/user` - Estat√≠sticas do afiliado logado
- `GET /api/stats/house/:houseId` - Estat√≠sticas espec√≠ficas por casa

### 20. **Casas de Apostas** - `/api/betting-houses` e `/api/admin/betting-houses`
**Arquivo:** `server/routes.ts`
**Endpoints:**
- `GET /api/betting-houses` - Lista casas (p√∫blico/afiliado)
- `GET /api/admin/betting-houses` - Lista casas (admin)
- `POST /api/admin/betting-houses` - Criar nova casa
- `PUT /api/admin/betting-houses/:id` - Atualizar casa
- `DELETE /api/admin/betting-houses/:id` - Excluir casa

### 21. **Afiliados (Admin)** - `/api/admin/affiliates/*`
**Arquivo:** `server/routes.ts`
**Endpoints:**
- `GET /api/admin/affiliates` - Listar afiliados com filtros
- `GET /api/admin/affiliates/:id` - Detalhes de um afiliado
- `PATCH /api/admin/affiliates/:id` - Atualizar afiliado
- `DELETE /api/admin/affiliates/:id` - Excluir afiliado

### 22. **Links de Afilia√ß√£o** - `/api/affiliate/*`
**Arquivo:** `server/routes.ts`
**Endpoints:**
- `POST /api/affiliate/join` - Criar link de afilia√ß√£o
- `GET /api/affiliate/links` - Listar links do afiliado
- `GET /api/affiliate/stats` - Estat√≠sticas do afiliado
- `GET /api/affiliate/conversions` - Convers√µes do afiliado
- `GET /api/affiliate/analytics` - Analytics avan√ßados

### 23. **Perfil de Usu√°rio** - `/api/user/*`
**Arquivo:** `server/routes.ts`
**Endpoints:**
- `GET /api/user/profile` - Dados do perfil
- `PUT /api/user/profile` - Atualizar perfil
- `PUT /api/user/pix` - Configurar chave PIX
- `GET /api/user/session` - Verificar sess√£o ativa

### 24. **Postbacks** - `/postback/*`
**Arquivo:** `server/routes.ts`
**Endpoints:**
- `GET /postback/click` - Receber postback de clique
- `GET /postback/register` - Receber postback de registro
- `GET /postback/deposit` - Receber postback de dep√≥sito
- `GET /postback/revenue` - Receber postback de receita

### 25. **Tracking** - `/track/:linkId`
**Arquivo:** `server/routes.ts`
**Fun√ß√£o:** Rastreamento de cliques em links de afilia√ß√£o
**Processo:**
1. Registra o clique no banco de dados
2. Captura IP, User-Agent, timestamp
3. Cria convers√£o do tipo 'click'
4. Redireciona para a casa de apostas

### 26. **Postbacks Registrados** - `/api/admin/registered-postbacks`
**Arquivo:** `server/routes.ts`
**Endpoints:**
- `GET /api/admin/registered-postbacks` - Listar postbacks
- `POST /api/admin/registered-postbacks` - Criar postback
- `PUT /api/admin/registered-postbacks/:id` - Atualizar postback
- `DELETE /api/admin/registered-postbacks/:id` - Excluir postback

### 27. **Convers√µes** - `/api/conversions/*`
**Arquivo:** `server/routes.ts`
**Endpoints:**
- `GET /api/conversions` - Listar convers√µes com filtros
- `GET /api/conversions/affiliates` - Afiliados para filtro
- `GET /api/conversions/houses` - Casas para filtro
- `POST /api/conversions/sync` - Sincroniza√ß√£o manual

### 28. **Pagamentos (Admin)** - `/api/admin/payments/*`
**Arquivo:** `server/routes.ts`
**Endpoints:**
- `GET /api/admin/payments/stats` - Estat√≠sticas de pagamentos
- `GET /api/admin/payments` - Listar pagamentos com filtros
- `GET /api/admin/payments/:id` - Detalhes do pagamento
- `PUT /api/admin/payments/:id` - Atualizar pagamento
- `PATCH /api/admin/payments/:id` - Atualiza√ß√£o parcial
- `PATCH /api/admin/payments/bulk-update` - A√ß√£o em lote
- `GET /api/admin/payments/export` - Exportar dados
- `POST /api/admin/payments/:id/approve` - Aprovar pagamento
- `POST /api/admin/payments/:id/reject` - Rejeitar pagamento

### 29. **API v1 Externa** - `/api/v1/*`
**Arquivo:** `server/api-routes.ts`
**Endpoints:**
- `POST /api/v1/conversions` - Receber convers√µes externas
- `GET /api/v1/affiliates` - Listar afiliados (para casas)
- `POST /api/v1/webhook` - Webhooks gen√©ricos
- `GET /api/v1/stats` - Estat√≠sticas para casas
- `GET /api/v1/docs` - Documenta√ß√£o da API

### 30. **Webhooks** - `/webhook/*`
**Arquivo:** `server/webhook-endpoints.ts`
**Fun√ß√£o:** Receber webhooks de diferentes casas de apostas
**Endpoints din√¢micos baseados na configura√ß√£o das casas**

---

## üóÑÔ∏è ESTRUTURA DO BANCO DE DADOS

### 31. **Schema Principal** - `shared/schema.ts`
**Tabelas:**

#### **users** (Usu√°rios/Afiliados)
- `id` - Chave prim√°ria
- `username` - Nome de usu√°rio √∫nico
- `email` - Email √∫nico
- `password` - Hash da senha
- `fullName` - Nome completo
- `cpf` - CPF √∫nico
- `phone` - Telefone
- `birthDate` - Data de nascimento
- `role` - Papel (admin/affiliate)
- `isActive` - Status ativo
- `pixKeyType` - Tipo da chave PIX
- `pixKeyValue` - Valor da chave PIX
- `createdAt` - Data de cria√ß√£o

#### **bettingHouses** (Casas de Apostas)
- `id` - Chave prim√°ria
- `name` - Nome da casa
- `description` - Descri√ß√£o
- `logoUrl` - URL do logo
- `baseUrl` - URL base para afilia√ß√£o
- `identifier` - Identificador √∫nico
- `securityToken` - Token de seguran√ßa
- `primaryParam` - Par√¢metro principal (subid)
- `additionalParams` - Par√¢metros adicionais
- `commissionType` - Tipo de comiss√£o
- `commissionValue` - Valor da comiss√£o
- `cpaValue` - Valor CPA
- `revshareValue` - Valor RevShare
- `minDeposit` - Dep√≥sito m√≠nimo
- `paymentMethods` - M√©todos de pagamento
- `isActive` - Status ativo
- `integrationType` - Tipo de integra√ß√£o
- `apiBaseUrl` - URL da API
- `apiKey` - Chave da API
- `syncInterval` - Intervalo de sincroniza√ß√£o

#### **affiliateLinks** (Links de Afilia√ß√£o)
- `id` - Chave prim√°ria
- `userId` - FK para users
- `houseId` - FK para bettingHouses
- `generatedUrl` - URL gerada
- `isActive` - Status ativo
- `createdAt` - Data de cria√ß√£o

#### **conversions** (Convers√µes)
- `id` - Chave prim√°ria
- `userId` - FK para users
- `houseId` - FK para bettingHouses
- `affiliateLinkId` - FK para affiliateLinks
- `type` - Tipo (click/registration/deposit/profit)
- `amount` - Valor da transa√ß√£o
- `commission` - Comiss√£o gerada
- `customerId` - ID do cliente na casa
- `convertedAt` - Data da convers√£o
- `conversionData` - Dados adicionais JSON

#### **clickTracking** (Rastreamento de Cliques)
- `id` - Chave prim√°ria
- `linkId` - FK para affiliateLinks
- `userId` - FK para users
- `houseId` - FK para bettingHouses
- `ipAddress` - IP do clique
- `userAgent` - User agent
- `clickedAt` - Data do clique

#### **payments** (Pagamentos)
- `id` - Chave prim√°ria
- `userId` - FK para users
- `amount` - Valor do pagamento
- `method` - M√©todo (PIX/TED)
- `pixKey` - Chave PIX utilizada
- `status` - Status (pending/completed/failed)
- `transactionId` - ID da transa√ß√£o
- `createdAt` - Data da solicita√ß√£o
- `paidAt` - Data do pagamento

#### **registeredPostbacks** (Postbacks Registrados)
- `id` - Chave prim√°ria
- `name` - Nome do postback
- `url` - URL do postback
- `houseId` - FK para bettingHouses
- `eventType` - Tipo do evento
- `description` - Descri√ß√£o
- `isActive` - Status ativo

---

## üé® COMPONENTES E LAYOUTS

### 32. **Layout Principal** - `client/src/components/StandardLayout.tsx`
**Fun√ß√£o:** Layout padr√£o para p√°ginas internas
**Funcionalidades:**
- Sidebar responsiva (admin/affiliate)
- Header com informa√ß√µes do usu√°rio
- √Årea de conte√∫do din√¢mica
- Navigation breadcrumbs
- Logout functionality

### 33. **Sidebar Admin** - `client/src/components/admin/sidebar.tsx`
**Fun√ß√£o:** Menu lateral administrativo
**Itens do Menu:**
- Dashboard (`/admin`)
- Casas de Apostas (`/admin/houses`)
- Gerenciar Afiliados (`/admin/manage`)
- Gerador de Postbacks (`/admin/postback-generator`)
- Logs de Postbacks (`/admin/postback-logs`)
- Configura√ß√µes (`/admin/settings`)

### 34. **Sidebar Afiliado** - `client/src/components/affiliate-sidebar.tsx`
**Fun√ß√£o:** Menu lateral do afiliado
**Itens do Menu:**
- Dashboard (`/home`)
- Casas de Apostas (`/betting-houses`)
- Meus Links (`/my-links`)
- Relat√≥rios (`/reports`)
- Pagamentos (`/payments`)
- Perfil (`/profile`)

### 35. **Bottom Navigation** - `client/src/components/bottom-navigation.tsx`
**Fun√ß√£o:** Navega√ß√£o inferior para mobile
**Funcionalidades:**
- √çcones para principais se√ß√µes
- Indicador de p√°gina ativa
- Design responsivo
- Touch-friendly

---

## üîß SERVI√áOS E INTEGRA√á√ïES

### 36. **Commission Calculator** - `server/services/commissionCalculator.ts`
**Fun√ß√£o:** C√°lculo de comiss√µes baseado no tipo
**Tipos Suportados:**
- **CPA:** Valor fixo por convers√£o qualificada
- **RevShare:** Percentual do lucro/receita
- **Hybrid:** Combina√ß√£o de CPA + RevShare

### 37. **API Integration Service** - `server/services/apiIntegrationService.ts`
**Fun√ß√£o:** Integra√ß√£o com APIs externas das casas
**Funcionalidades:**
- Teste de conectividade
- Sincroniza√ß√£o de dados
- Autentica√ß√£o autom√°tica
- Retry policies
- Error handling

### 38. **Smartico Fetcher** - `server/services/smarticoFetcher.ts`
**Fun√ß√£o:** Integra√ß√£o espec√≠fica com Smartico
**Funcionalidades:**
- Fetch de convers√µes
- Mapeamento de dados
- Sincroniza√ß√£o autom√°tica
- Valida√ß√£o de dados

### 39. **Postback Handler** - `server/postback-simple.ts`
**Fun√ß√£o:** Processamento de postbacks recebidos
**Processo:**
1. Valida√ß√£o de token de seguran√ßa
2. Identifica√ß√£o do afiliado por subid
3. C√°lculo de comiss√£o baseado no evento
4. Registro da convers√£o no banco
5. Resposta padronizada (status: ok/error)

### 40. **Database Fallback** - `server/db-fallback.ts`
**Fun√ß√£o:** Sistema de fallback quando banco est√° indispon√≠vel
**Funcionalidades:**
- Dados tempor√°rios em mem√≥ria
- Sincroniza√ß√£o quando banco volta
- Usu√°rios e casas de emerg√™ncia

---

## üì± RESPONSIVIDADE E UX

### 41. **Design System**
**Framework:** Tailwind CSS + Shadcn/UI
**Tema:** Dark mode com palette azul/slate
**Breakpoints:**
- Mobile: < 768px
- Tablet: 768px - 1024px  
- Desktop: > 1024px

### 42. **Componentes UI Utilizados**
- **Cards:** Containers para estat√≠sticas e informa√ß√µes
- **Tables:** Listagens de dados com pagina√ß√£o
- **Forms:** Formul√°rios com valida√ß√£o
- **Modals:** Dialogs para a√ß√µes importantes
- **Charts:** Gr√°ficos para analytics (Recharts)
- **Badges:** Indicadores de status
- **Buttons:** A√ß√µes prim√°rias e secund√°rias

---

## üîí SEGURAN√áA E AUTENTICA√á√ÉO

### 43. **Sistema de Autentica√ß√£o**
**M√©todo:** Session-based com Passport.js
**Estrat√©gia:** Local Strategy (email/password)
**Middleware:**
- `requireAuth` - Verificar autentica√ß√£o
- `requireAdmin` - Verificar role admin
- `requireAffiliate` - Verificar role affiliate

### 44. **Valida√ß√µes de Seguran√ßa**
- Hash de senhas com bcrypt
- Valida√ß√£o de CPF √∫nico
- Rate limiting em endpoints cr√≠ticos
- Sanitiza√ß√£o de inputs
- CORS configurado
- Headers de seguran√ßa

---

## üìä ANALYTICS E M√âTRICAS

### 45. **M√©tricas Rastreadas**
- **Cliques:** Todos os cliques em links de afilia√ß√£o
- **Registros:** Novos usu√°rios nas casas
- **Dep√≥sitos:** Primeiro e subsequentes dep√≥sitos
- **Lucro:** Profit/loss das casas
- **Comiss√µes:** Valores pagos aos afiliados

### 46. **C√°lculos Autom√°ticos**
- Taxa de convers√£o (registros/cliques)
- Ticket m√©dio de dep√≥sito
- LTV (Lifetime Value) estimado
- ROI por afiliado
- Performance comparativa

---

## üöÄ DEPLOY E PRODU√á√ÉO

### 47. **Configura√ß√£o de Deploy**
**Scripts dispon√≠veis:**
- `npm run build` - Build de produ√ß√£o
- `npm run dev` - Desenvolvimento
- `npm run db:push` - Aplicar schema no banco
- `npm start` - Iniciar servidor de produ√ß√£o

### 48. **Vari√°veis de Ambiente**
- `NODE_ENV` - Ambiente (development/production)
- `DATABASE_URL` - Conex√£o PostgreSQL
- `SESSION_SECRET` - Chave secreta das sess√µes
- `PORT` - Porta do servidor (padr√£o 3000)

---

## üìã RESUMO T√âCNICO

**Total de Rotas Frontend:** 20+ p√°ginas
**Total de Endpoints API:** 40+ endpoints
**Banco de Dados:** 8 tabelas principais
**Arquitetura:** Frontend React + Backend Node.js + PostgreSQL
**Autentica√ß√£o:** Session-based com roles
**Deploy:** Replit, VPS ou Docker
**Performance:** Otimizado para at√© 10k usu√°rios simult√¢neos

**Funcionalidades Principais:**
‚úÖ Sistema completo de afilia√ß√£o
‚úÖ M√∫ltiplos tipos de comiss√£o
‚úÖ Tracking avan√ßado de convers√µes
‚úÖ Painel administrativo completo
‚úÖ Sistema de pagamentos
‚úÖ Integra√ß√µes via postback e API
‚úÖ Analytics e relat√≥rios detalhados
‚úÖ Design responsivo moderno
